# -*- coding: utf-8 -*-
"""SkinDisease2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/118K76oMeZesIi0bW9JoSkX20etVVNB_H
"""

import tensorflow as tf
import os
train_path = '/content/drive/MyDrive/Dataset/train'
test_path = '/content/drive/MyDrive/Dataset/test'

from google.colab import drive
drive.mount('/content/drive')

#Image Preprocessing here
datagen = tf.keras.preprocessing.image.ImageDataGenerator(
    rescale = 1./255 , 
    validation_split = 0.2
)
train_generator = datagen.flow_from_directory(
    train_path , target_size = (224, 224),
        batch_size = 64,
         subset = 'training'
)
val_generator = datagen.flow_from_directory(
    train_path , target_size = (224, 224),
        batch_size = 64,
         subset = 'validation'
)

print(train_generator.class_indices)
labels = '\n'.join(sorted(train_generator.class_indices.keys()))
with open('labels.txt' , 'w') as f:
  f.write(labels)

#Using Pretrained layers
base_model = tf.keras.applications.MobileNetV2(
    input_shape = (224,224,3) , 
    include_top = False
)
base_model.trainable = False
model = tf.keras.Sequential([
         base_model ,
         tf.keras.layers.Conv2D(32 , 3 , activation = 'relu') , 
         tf.keras.layers.Dropout(0.2) , 
         tf.keras.layers.MaxPooling2D() , 
         tf.keras.layers.Dense(19 , activation = 'softmax') 
                                     
])

model.compile(optimizer = 'adam' , loss = 'categorical_crossentropy' , metrics = ['accuracy'])
model.fit(train_generator , epochs = 10 , validation_data = val_generator)

y_pred = model.predict()